local s,e = pcall(function()
	loadstring(game:HttpGet("https://pastebin.com/raw/nm0e56Ce"))()
end)
if s then				
if game.CoreGui:FindFirstChild("Universal Murder Mystery v("..getgenv().Script_Version..")") then
	game.CoreGui["Universal Murder Mystery v("..getgenv().Script_Version..")"]:Destroy()
elseif game.CoreGui:FindFirstChild("LoaderGUI") then
	game.CoreGui.LoaderGUI:Destroy()
	if game.CoreGui:FindFirstChild("Universal Murder Mystery v("..getgenv().Script_Version..")") then
		game.CoreGui["Universal Murder Mystery v("..getgenv().Script_Version..")"]:Destroy()
	end
end
end
local LoaderGUI = Instance.new("ScreenGui")
local LoaderFrame = Instance.new("Frame")
local LoadingBarBackground = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local LoadingBar = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local UIGradient = Instance.new("UIGradient")
local LoaderDisplay = Instance.new("TextLabel")
LoaderGUI.Name = "LoaderGUI"
LoaderGUI.Parent = game.CoreGui
LoaderGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

LoaderFrame.Name = "LoaderFrame"
LoaderFrame.Parent = LoaderGUI
LoaderFrame.AnchorPoint = Vector2.new(0.5, 0.5)
LoaderFrame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
LoaderFrame.BackgroundTransparency = 0.075
LoaderFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
LoaderFrame.Position = UDim2.new(0.5, 0, 0.499569058, 0)
LoaderFrame.Size = UDim2.new(0, 297, 0, 168)

LoadingBarBackground.Name = "LoadingBarBackground"
LoadingBarBackground.Parent = LoaderFrame
LoadingBarBackground.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LoadingBarBackground.BackgroundTransparency = 0.800
LoadingBarBackground.BorderSizePixel = 0
LoadingBarBackground.ClipsDescendants = true
LoadingBarBackground.Position = UDim2.new(0.0195974223, 0, 0.109371461, 0)
LoadingBarBackground.Size = UDim2.new(0, 285, 0, 12)

UICorner.CornerRadius = UDim.new(0, 3)
UICorner.Parent = LoadingBarBackground

LoadingBar.Name = "LoadingBar"
LoadingBar.Parent = LoadingBarBackground
LoadingBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LoadingBar.BackgroundTransparency = 0.500
LoadingBar.BorderSizePixel = 0
LoadingBar.Size = UDim2.new(0, 0, 0, 12)

UICorner_2.CornerRadius = UDim.new(0, 3)
UICorner_2.Parent = LoadingBar

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(19, 11, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(14, 90, 255))}
UIGradient.Parent = LoadingBar

LoaderDisplay.Name = "LoaderDisplay"
LoaderDisplay.Parent = LoaderFrame
LoaderDisplay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LoaderDisplay.BackgroundTransparency = 1.000
LoaderDisplay.Position = UDim2.new(0.160550416, 0, 0.105938233, 0)
LoaderDisplay.Size = UDim2.new(0, 200, 0, 10)
LoaderDisplay.Font = Enum.Font.SourceSansBold
LoaderDisplay.Text = "Loading..."
LoaderDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
LoaderDisplay.TextSize = 15.000
LoaderDisplay.TextStrokeTransparency = 0.830
LoaderDisplay.TextWrapped = true

local UpdateNotesScreenGui = Instance.new("ScreenGui")
local UpdateNotes = Instance.new("Frame")
local UICornerForUpdateNotes = Instance.new("UICorner")
local UpdateNotesClose = Instance.new("ImageButton")
local UpdateNotesTitle = Instance.new("TextLabel")
local ReleaseNotesMessage = Instance.new("TextLabel")

UpdateNotesScreenGui.Parent = game.CoreGui
UpdateNotesScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
UpdateNotesScreenGui.Name = "UpdateNotes"

UpdateNotes.Name = "UpdateNotesGUI"
UpdateNotes.Parent = UpdateNotesScreenGui
UpdateNotes.BackgroundColor3 = Color3.fromRGB(31, 31, 35)
UpdateNotes.BorderSizePixel = 0
UpdateNotes.Position = UDim2.new(0.367298573, 0, 0.190965086, 0)
UpdateNotes.Size = UDim2.new(0, 550, 0, 440)
UpdateNotes.Visible = false

UICornerForUpdateNotes.CornerRadius = UDim.new(0, 2)
UICornerForUpdateNotes.Parent = UpdateNotes

UpdateNotesClose.Name = "close"
UpdateNotesClose.Parent = UpdateNotes
UpdateNotesClose.BackgroundTransparency = 1.000
UpdateNotesClose.Position = UDim2.new(0.954, 0, 0, 0)
UpdateNotesClose.Size = UDim2.new(0, 25, 0, 25)
UpdateNotesClose.ZIndex = 2
UpdateNotesClose.Image = "rbxassetid://3926305904"
UpdateNotesClose.ImageRectOffset = Vector2.new(284, 4)
UpdateNotesClose.ImageRectSize = Vector2.new(24, 24)

UpdateNotesTitle.Name = "Title"
UpdateNotesTitle.Parent = UpdateNotes
UpdateNotesTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UpdateNotesTitle.BackgroundTransparency = 1.000
UpdateNotesTitle.Position = UDim2.new(0.317, 0, 0, 0)
UpdateNotesTitle.Size = UDim2.new(0, 203, 0, 25)
UpdateNotesTitle.Font = Enum.Font.SourceSansBold
UpdateNotesTitle.Text = "Version 1.0.0 release notes"
UpdateNotesTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
UpdateNotesTitle.TextSize = 16.000
UpdateNotesTitle.TextWrapped = true

ReleaseNotesMessage.Name = "ReleaseNotesMessage"
ReleaseNotesMessage.Parent = UpdateNotes
ReleaseNotesMessage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ReleaseNotesMessage.BackgroundTransparency = 1.000
ReleaseNotesMessage.Position = UDim2.new(0.0119402986, 0, 0.129999995, 0)
ReleaseNotesMessage.Size = UDim2.new(0, 547, 0, 390)
ReleaseNotesMessage.Font = Enum.Font.SourceSansBold
ReleaseNotesMessage.Text = "This current version, 1.0.0, has not received any updates yet. Please use my Youtube/Discord/V3rmillion account if you need help with the script!"
ReleaseNotesMessage.TextColor3 = Color3.fromRGB(255, 255, 255)
ReleaseNotesMessage.TextSize = 17
ReleaseNotesMessage.TextStrokeTransparency = 0.520
ReleaseNotesMessage.TextWrapped = true
ReleaseNotesMessage.TextXAlignment = Enum.TextXAlignment.Left
ReleaseNotesMessage.TextYAlignment = Enum.TextYAlignment.Top
local function VMQU_fake_script()
	local script = Instance.new('LocalScript', LoaderFrame)

	local display = script.Parent.LoaderDisplay
	local LOADER_TABLE = {}
	wait()
	function findplace(list,ValueToFind)
		for i,v in pairs(list) do
			if v == ValueToFind then
				return i
			end
		end
	end
	LOADER_TABLE['1'] = {Text="Initializing Setup";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Preliminary Checks Complete"} else 
				if game:GetService("RunService") and game and game:IsLoaded() and game.Lighting and game.CoreGui:FindFirstChild("LoaderGUI") and #game.CoreGui.LoaderGUI:GetDescendants() >=7 then
					wait()
					return {true,"Preliminary Checks Complete"}
				else
					return {false,"Mandatory Checks Failed"}
				end
			end
		end;
	}
	LOADER_TABLE['6'] = {Text="Checking Game";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Game Supported"} else 
				if game.Name and game.Name:lower():find("mm") or game.Name:lower():find("murder mystery") or game.Name:lower():find("murder") or game.Name:lower():find("mystery") then
					wait()
					return {true,"Game Supported"}
				else
					return {false,"Game Possibly Not Supported"}
				end
			end
		end;
	}
	LOADER_TABLE['13'] = {Text="Checking Version";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Version Operational"} else 
				local s,e = pcall(function()
				loadstring(game:HttpGet("https://pastebin.com/raw/nm0e56Ce"))()
				end)
				if s then
				UpdateNotesTitle.Text = "Version "..getgenv().Script_Version.." Release Notes"
				ReleaseNotesMessage.Text = getgenv().Version_Update_Message
				UpdateNotesClose.MouseButton1Click:Connect(function ()
				UpdateNotesScreenGui:Destroy()
				end)
				return {true,"Version Operational"}
				else
				return {false,"Version Loading Problem"}
				end
				end
		end;
	}
	LOADER_TABLE
	['23'] = {Text="Loading GUI Skeleton";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Created UI LIB Frame"} else 
				lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
				repeat wait() until lib
				if lib then
				local version = getgenv().Script_Version or "1.0.0"
					venyx = lib.new("Universal Murder Mystery v("..version..")")
					venyx:toggle()
					return {true,"Created UI LIB Frame"}
				end
			end
		end;
	}
	LOADER_TABLE['31'] = {Text="Removing AntiExploit";
		Init_Function = function()
			local function checkantiexploitenabled()
				for i,v in pairs(game:GetDescendants()) do
					if (v.Name == 'ExploitPrevention' and v:IsA("LocalScript")) or (v.Name == 'PlayerRenderer' and v:IsA("LocalScript")) then
						return true
					end
				end
				return false
			end
			if game:GetService("RunService"):IsStudio() then return {true,"Setup Anti-Anticheat"} else 
				if checkantiexploitenabled() then
					for i,v in pairs(game:GetDescendants()) do
						if (v.Name == 'ExploitPrevention' and v:IsA("LocalScript")) then
							v.Disabled = true
						elseif (v.Name == 'PlayerRenderer' and v:IsA("LocalScript"))  then
							local function modify()
								getsenv(v).kick = function()
									print('Hahaha bypassed the client-sided anticheat!')
								end
							end
							spawn(modify)
						end
					end
					game.DescendantAdded:Connect(function(object)
						if (object.Name == 'ExploitPrevention' and object:IsA("LocalScript")) then
							object.Disabled = true
						end
					end)
					return {true,"Setup Anti-Anticheat"}
				else 
					return {true,"No Anticheat Found!"}
				end
			end
		end;
	}
	LOADER_TABLE['40'] = {Text="Loading Main Hub";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Loaded"} else 
				wait(1)
				return {true,"Loaded"}
			end
		end;
	}
	LOADER_TABLE['54'] = {Text="Loading Visuals";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Successfully Created Visuals"} else 
				VisualsPage = venyx:addPage("Visuals")
				PlayerVisualsSection = VisualsPage:addSection("Player Visuals")
				MiscVisualsSection = VisualsPage:addSection("Misc")
				VisualsSettingsSection = VisualsPage:addSection("Visuals Settings")
				Chams = PlayerVisualsSection:addToggle("Role Chams ESP",false,function(value)
					getgenv().Chams = value		
				end)
				Xray = PlayerVisualsSection:addToggle("Xray",false,function(value)
					getgenv().Xray = value		
				end)
				ChamsEspTransparency = VisualsSettingsSection:addSlider("Chams Transparency",50,0,100, function(value)
					getgenv().ChamsTransparency = value/100
				end)
				XrayTransparency = VisualsSettingsSection:addSlider("Xray Transparency",50,0,99, function(value)
					getgenv().XrayTransparency = value/100
				end)
				return {true,"Successfully Created Visuals"}
			end
		end;
	}
	LOADER_TABLE['61'] = {Text="Loading Teleports";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Successfully Created Teleports"} else 
				TeleportsPage = venyx:addPage("Teleports")
				PlayerTeleports = TeleportsPage:addSection("Players")
				GameTeleports = TeleportsPage:addSection("Game Teleports")
				MiscTeleports = TeleportsPage:addSection("Misc Teleports")
				local PlayerTeleportsAlreadyCreated = {}
				for i,v in pairs(game.Players:GetChildren()) do
					if not table.find(PlayerTeleportsAlreadyCreated,v.Name) and v.Name ~= game.Players.LocalPlayer.Name then
						PlayerTeleportsAlreadyCreated[#PlayerTeleportsAlreadyCreated+1] = v.Name
					end
				end
				PlayersToTeleportTo = PlayerTeleports:addDropdown("Players to Teleport On",PlayerTeleportsAlreadyCreated,function(playerSelected)
					game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = game.Players[playerSelected].Character:WaitForChild("HumanoidRootPart").CFrame
				end)
				game.Players.PlayerAdded:Connect(function(player)
					if not table.find(PlayerTeleportsAlreadyCreated,player.Name) and player.Name ~= game.Players.LocalPlayer.Name then
						PlayerTeleportsAlreadyCreated[#PlayerTeleportsAlreadyCreated+1] = player.Name
						PlayerTeleports:updateDropdown(PlayersToTeleportTo,"Players to Teleport On",PlayerTeleportsAlreadyCreated,function(playerSelected)
							game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = game.Players[playerSelected].Character:WaitForChild("HumanoidRootPart").CFrame
						end)
					end
				end)
				game.Players.PlayerRemoving:Connect(function(player)
					if table.find(PlayerTeleportsAlreadyCreated,player.Name) and player.Name ~= game.Players.LocalPlayer.Name then
						PlayerTeleportsAlreadyCreated[findplace(PlayerTeleportsAlreadyCreated,player.Name)] = nil
						PlayerTeleports:updateDropdown(PlayersToTeleportTo,"Players to Teleport On",PlayerTeleportsAlreadyCreated,function(playerSelected)
						local char =  game.Players[playerSelected].Character or game.Players[playerSelected].CharacterAdded:Wait()
							game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = char:WaitForChild("HumanoidRootPart").CFrame
						end)
					end
				end)
				Map = GameTeleports:addButton("Teleport to Current Map",function()
					local function check1()
						for i,v in pairs(workspace:GetDescendants()) do
							if v.Name == "Spawns" and not v:FindFirstAncestor("Lobby") then
								return true
							end
						end
					end
					if game.Workspace:FindFirstChild("Map") then
						for i,v in pairs(workspace.Map:GetDescendants()) do
							if v.Name == "Spawn" then
								game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = v.CFrame
							end
						end
					elseif check1() then
						for i,v in pairs(workspace:GetDescendants()) do
							if v.Name == "Spawns" and not v:FindFirstAncestor("Lobby") then
								game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = v:GetChildren()[1].CFrame
							end
						end

					end
				end)
				Lobby = GameTeleports:addButton("Teleport to Lobby",function()
					if workspace:FindFirstChild("Lobby") and workspace.Lobby:FindFirstChild("Spawns") and workspace.Lobby.Spawns:FindFirstChild("Model") then
						game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = workspace.Lobby.Spawns.Model:GetChildren()[1].CFrame
					elseif workspace:FindFirstChild("Lobby") and workspace.Lobby:FindFirstChild('Spawns') then
						game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = game:GetService("Workspace").Lobby.Spawns:GetChildren()[1].CFrame
					elseif workspace:FindFirstChild("Lobby") then
						for i,v in pairs(workspace:GetChildren()) do
							if v.Name == "Lobby" then
								for x,d in pairs(v:GetDescendants()) do
									if d.Name == "SpawnLocation" or d.Name == "Spawn" then
										game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = d.CFrame
									end
								end
							end
						end
					elseif game:GetService("Workspace")["MM2 Christmas Lobby"] then
						game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = game:GetService("Workspace")["MM2 Christmas Lobby"].Spawns:GetChildren()[1].CFrame
					end
				end)
				return {true,"Successfully Created Teleports"}
			end
		end;
	}
	LOADER_TABLE['67'] = {Text="Loading Player Features";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Successfully Created Player"} else 
				PlayerPage = venyx:addPage("Player")
				Player_MovementSection = PlayerPage:addSection("Player Movement")
				Player_MiscSection = PlayerPage:addSection("Misc Player Features")
				RedeemAllCodes = Player_MiscSection:addButton("Redeem All Codes",function()
					if RedeemAllCodes.Title.Text == "Redeem All Codes" and game.ReplicatedStorage:FindFirstChild("GetSyncData") then
						Player_MiscSection:updateButton(RedeemAllCodes,"Redeeming...")
						wait(1)
						local counter = 0
						local function findlen(indexs)
							local n = 0;
							for i,v in pairs(indexs) do
								n += 1
							end
							return n
						end
						for i,v in pairs(game.ReplicatedStorage:FindFirstChild("GetSyncData"):InvokeServer("Codes")) do
							game:GetService("ReplicatedStorage").RedeemCode:FireServer(i)
							counter += 1  
							Player_MiscSection:updateButton(RedeemAllCodes,"Redeemed "..counter.."/"..findlen(game.ReplicatedStorage:FindFirstChild("GetSyncData"):InvokeServer("Codes")))
						end	
					elseif RedeemAllCodes.Title.Text == "Redeem All Codes" and game:GetService("ReplicatedStorage"):FindFirstChild("Interactions"):FindFirstChild("Server"):FindFirstChild("RedeemCode") and game.ReplicatedStorage:FindFirstChild("Codes") then
						Player_MiscSection:updateButton(RedeemAllCodes,"Redeeming...")
						wait(1)
						local counter = 0
						for i,v in pairs(game.ReplicatedStorage.Codes:GetChildren()) do
							task.spawn(function ()
								game:GetService("ReplicatedStorage").Interactions.Server.RedeemCode:InvokeServer(v.Name)
							end)
							counter += 1 
							Player_MiscSection:updateButton(RedeemAllCodes,"Redeemed "..counter.."/"..#game.ReplicatedStorage.Codes:GetChildren())
						end

					end
				end)
				PlayerWalkSpeed = Player_MovementSection:addSlider("Player Walkspeed",16,0,100,function(value)
					game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = value
				end)
				PlayerJumpPower = Player_MovementSection:addSlider("Player JumpPower",50,0,200,function(value)
					game.Players.LocalPlayer.Character:WaitForChild("Humanoid").JumpPower = value
				end)
				return {true,"Successfully Created Player"}
			end
		end;
	}
	LOADER_TABLE['75'] = {Text="Loading Autofarms";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Successfully Created Autofarms"} else 
				AutofarmsPage = venyx:addPage("Autofarms")
				AutoShop = AutofarmsPage:addSection("Autofarms-Shop")
				AutoUnboxToggle = AutoShop:addToggle("Crate Autofarm: Off", false, function(value)
					getgenv().Autounbox = value
					if value then
						AutoShop:updateButton(AutoUnboxToggle,"Crate Autofarm: On",true)
					else
						AutoShop:updateButton(AutoUnboxToggle,"Crate Autofarm: Off",false)
					end
				end)
				if game.ReplicatedStorage:FindFirstChild("GetSyncData") then
					local CrateTableNames = {}
					local CrateTableInfo = {}
					for rArg, cTable in pairs(game.ReplicatedStorage.GetSyncData:InvokeServer('MysteryBox')) do
						local cratePrice = cTable.Price or "?"
						if cTable.Name then 
							CrateTableNames[#CrateTableNames+1] = cTable.Name .. " ($"..cratePrice ..")"
							CrateTableInfo[cTable.Name .. " ($".. cratePrice ..")"] = rArg
						end
					end
					local AutoUnboxCrates = AutoShop:addDropdown("Auto Unbox Crate None",CrateTableNames,function(SelectedCrate)
						getgenv().AutounboxRemote = CrateTableInfo[SelectedCrate]
					end)
				elseif game.ReplicatedStorage:FindFirstChild('ShopEntries') and game.ReplicatedStorage.ShopEntries:FindFirstChild("WeaponSkins") and game.ReplicatedStorage:FindFirstChild("Interactions") and game.ReplicatedStorage.Interactions.Server:FindFirstChild("BuyShopItem") then
					local CrateNamesTable = {}
					for i,v in pairs(game:GetService("ReplicatedStorage").ShopEntries.WeaponSkins:GetChildren()) do
						CrateNamesTable[#CrateNamesTable+1] = v.Name
					end
					local AutoUnboxCrates = AutoShop:addDropdown("Auto Unbox Crate None",CrateNamesTable,function(SelectedCrate)
						getgenv().AutounboxRemote = SelectedCrate
					end)
				elseif game.ReplicatedStorage:FindFirstChild('ShopEntries') and game.ReplicatedStorage.ShopEntries:FindFirstChild("KnifeSkins") and game.ReplicatedStorage.ShopEntries:FindFirstChild("RevolverSkins") and game.ReplicatedStorage:FindFirstChild("Interactions") and game.ReplicatedStorage.Interactions.Server:FindFirstChild("BuyShopItem") then
					local CrateNamesRevTable = {}
					local CrateNamesKnifeTable = {}
					for i,v in pairs(game:GetService("ReplicatedStorage").ShopEntries.KnifeSkins:GetChildren()) do
						CrateNamesKnifeTable[#CrateNamesKnifeTable+1] = v.Name
					end
					for i,v in pairs(game:GetService("ReplicatedStorage").ShopEntries.RevolverSkins:GetChildren()) do
						CrateNamesRevTable[#CrateNamesRevTable+1] = v.Name
					end
					local AutoUnboxCratesKnife = AutoShop:addDropdown("Auto Unbox Crate None",CrateNamesKnifeTable,function(SelectedCrate)
						getgenv().AutounboxRemote = game.ReplicatedStorage.ShopEntries.KnifeSkins[SelectedCrate]
					end)
					local AutoUnboxCratesRev = AutoShop:addDropdown("Auto Unbox Crate None",CrateNamesRevTable,function(SelectedCrate)
						getgenv().AutounboxRemote = game.ReplicatedStorage.ShopEntries.RevolverSkins[SelectedCrate]
					end)
					local removeUnboxUiButton = AutoShop:addButton("Remove Case Open UI (better performance)",function()
						for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CaseOpen.Scroller:GetChildren()) do
							if v:IsA("Sound") then
							v.Volume = 0
							end
						end
						game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CaseOpen.Changed:Connect(function (what)
								if what == "Visible" then
							game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CaseOpen.Visible = false
						end	
						end)
					game.Lighting.DescendantAdded:Connect(function (child)
					task.wait()
					if child.Name == "CaseBlurEffect" then
						child.Size = 0
						child:Destroy()
					end
end)
					end)
				end
			end
			return {true,"Successfully Created Autofarms"}


		end;
	}
	LOADER_TABLE['80'] = {Text="Loading Combat";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Successfully Created Combat"} else 
				CombatPage = venyx:addPage("Combat")			

				return {true,"Successfully Created Combat"}
			end
		end;
	}
	LOADER_TABLE['83'] = {Text="Loading Settings";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Successfully Created Settings"} else 
				SettingsPage = venyx:addPage("Settings",8251178690)
				ColorSelectorSection = SettingsPage:addSection("Colors")
				MiscSettings = SettingsPage:addSection("Misc Settings")
				themes = {
					Background = Color3.fromRGB(24, 24, 24),
					Glow = Color3.fromRGB(0, 0, 0),
					Accent = Color3.fromRGB(10, 10, 10),
					LightContrast = Color3.fromRGB(20, 20, 20),
					DarkContrast = Color3.fromRGB(14, 14, 14),  
					TextColor = Color3.fromRGB(255, 255, 255)
				}
				for theme, color in pairs(themes) do
					ColorSelectorSection:addColorPicker(theme, color, function(color3)
						venyx:setTheme(theme, color3)
					end)
				end
				MiscSettings:addKeybind("GUI Toggle Key",Enum.KeyCode.Q,function() venyx:toggle() end,function() end)
				MiscSettings:addButton("Unlock FPS Cap",function()
				setfpscap(360)
				end)
				return {true,"Successfully Created Settings"}
			end
		end;
	}
	LOADER_TABLE['90'] = {Text="Checking executor";
		Init_Function = function()
			if game:GetService("RunService"):IsStudio() then return {true,"Executor Supported"} else 
				if Drawing and getgenv() and (request or http_request or syn.request) and setclipboard and setfpscap then
					wait()
					return {true,"Executor Supported"}
				else 
					return {false,"Executor Not Supported"}
				end
			end
		end;
	}
	LOADER_TABLE['95'] = {Text="Finishing Up";
		Init_Function = function()
		local function InitChams()
			local function create_chams(player)
						local char = player.Character
						if game.Players:FindFirstChild(player.Name) and player ~= game.Players.LocalPlayer and char then
						repeat wait() until char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") and char.Humanoid.Health > 0
						for i,v in pairs(char:GetChildren()) do
							if v:IsA("Part") or v:IsA("MeshPart") and not v:FindFirstChild("ChamsESP") then
							local adorn_chams = Instance.new("BoxHandleAdornment")
							adorn_chams.Parent = v
							adorn_chams.AlwaysOnTop = true
							adorn_chams.Adornee = v
							adorn_chams.Name = "ChamsESP"
							adorn_chams.Size = v.Size
							adorn_chams.Transparency = getgenv().ChamsTransparency or 0.5
							adorn_chams.Visible = getgenv().Chams or false
							adorn_chams.ZIndex = 1
							if char:FindFirstChild('Knife') or player.Backpack:FindFirstChild('Knife') then
									adorn_chams.Color3 = Color3.new(1, 0, 0)
								elseif char:FindFirstChild('Gun') or char:FindFirstChild('Revolver') or player.Backpack:FindFirstChild('Gun') or player.Backpack:FindFirstChild('Revolver') then
									adorn_chams.Color3 = Color3.new(0, 0, 1)
								else
									adorn_chams.Color3 = Color3.new(0, 1, 0)
								end	
							end
						end
					local function updateChams(PLAYER,role)
						for i,v in pairs(PLAYER.Character:GetChildren()) do
							if v:FindFirstChild("ChamsESP") then
							if role == "Knife" then
							v.ChamsESP.Color3 = Color3.new(1, 0, 0)
							elseif role == "Gun" then
							v.ChamsESP.Color3 = Color3.new(0, 0, 1)
							end
							end
						end
						end
					local charchildaddedconnect = char.ChildAdded:Connect(function(child)
							if child.Name == "Knife" then
								updateChams(player,"Knife")
							elseif child.Name == "Gun" or child.Name == "Revolver" then
								updateChams(player,"Gun")
							end
						end)
					local bconnection = player.Backpack.ChildAdded:Connect(function(child)
							if child.Name == "Knife" then
								updateChams(player,"Knife")
							elseif child.Name == "Gun" or child.Name == "Revolver" then
								updateChams(player,"Gun")
							end
						end)
					local charconnection = char:WaitForChild("Humanoid").Died:Connect(function()
						for i,v in pairs(char:GetChildren()) do
							if v:FindFirstChild("ChamsESP") then
							v.ChamsESP:Destroy()
							end
						end
						end)
					end
					end					
					for i,v in pairs(game.Players:GetPlayers()) do
							create_chams(v)
							v.CharacterAdded:Connect(function ()
							create_chams(v)
						end)
							task.spawn(function()
						while wait(1) do
						if getgenv().Chams ~= nil then
							local char = v.Character or v.CharacterAdded:Wait()
							repeat wait() until char:FindFirstChild("Humanoid") and char:FindFirstChild("HumanoidRootPart")
						for i,index in pairs(char:GetChildren()) do
							if index:FindFirstChild("ChamsESP") then
								index.ChamsESP.Transparency = getgenv().ChamsTransparency or 0.5
							index.ChamsESP.Visible = getgenv().Chams
							end
						end
						end
						end 
						end)
					end
					game.Players.PlayerAdded:Connect(function(plr)
					create_chams(plr)
					plr.CharacterAdded:Connect(function ()
							create_chams(plr)
						end)
					task.spawn(function()
						while wait(1) do
						if getgenv().Chams ~= nil then
						local char = plr.Character or plr.CharacterAdded:Wait()
						repeat wait() until char:FindFirstChild("Humanoid") and char:FindFirstChild("HumanoidRootPart")
						for i,index in pairs(char:GetChildren()) do
							if index:FindFirstChild("ChamsESP") then
							index.ChamsESP.Transparency = getgenv().ChamsTransparency or 0.5
							index.ChamsESP.Visible = getgenv().Chams
							end
						end
						end
						end 
						end)
					end)
					end
			local function xrayInit()
				local function insidefunction()
				repeat wait() until getgenv().Xray
						for i,v in pairs(workspace:GetDescendants()) do
							if v:IsA("BasePart") and v.Transparency ~= 1 then
								v.Transparency = getgenv().XrayTransparency or 0.5
							end 
						end
					repeat wait() until getgenv().Xray == false
						for i,v in pairs(workspace:GetDescendants()) do
							if v:IsA("BasePart") and v.Transparency ~= 1 then
								v.Transparency = 0
							end
					end
				insidefunction()
				end
				insidefunction()
			end
			local function Autounbox()
				if game.ReplicatedStorage:FindFirstChild("Remotes") and game.ReplicatedStorage.Remotes:FindFirstChild("Shop") and game.ReplicatedStorage.Remotes.Shop:FindFirstChild('OpenCrate') then			
					local function insidefunction()
						repeat task.wait() until getgenv().Autounbox and getgenv().AutounboxRemote
						game.ReplicatedStorage.Remotes.Shop.OpenCrate:InvokeServer(getgenv().AutounboxRemote)	
						insidefunction()
					end
					insidefunction()
				elseif game.ReplicatedStorage:FindFirstChild('ShopEntries') and game.ReplicatedStorage.ShopEntries:FindFirstChild("WeaponSkins") and game.ReplicatedStorage.Interactions.Server:FindFirstChild("BuyShopItem") then
					local function insidefunction()
						repeat task.wait(0.01) until getgenv().Autounbox and getgenv().AutounboxRemote
						game:GetService("ReplicatedStorage").Interactions.Server.BuyShopItem:InvokeServer(game:GetService("ReplicatedStorage").ShopEntries.WeaponSkins[getgenv().AutounboxRemote])
						insidefunction()
					end
					insidefunction()
				elseif game.ReplicatedStorage:FindFirstChild('ShopEntries') and game.ReplicatedStorage.ShopEntries:FindFirstChild("KnifeSkins") and game.ReplicatedStorage.Interactions.Server:FindFirstChild("BuyShopItem") then
					local function insidefunction()
						repeat task.wait(0.01) until getgenv().Autounbox and getgenv().AutounboxRemote
						game:GetService("ReplicatedStorage").Interactions.Server.BuyShopItem:InvokeServer(getgenv().AutounboxRemote)
						insidefunction()
					end
					insidefunction()
				end
			end
			task.spawn(xrayInit)
			task.spawn(InitChams)
			task.spawn(Autounbox)
			return {true,"Finished"}
		end;
	}
	LOADER_TABLE['100'] = {Text="Enjoy The Script!";
		Init_Function = function()
			wait(1)
			return {true,"Complete!"}
		end;
	}
	function color()
		while wait() do
			for i = 1,360 do
				wait()
				script.Parent.BorderColor3 = Color3.fromHSV(i/360,1,1)
			end
		end
	end
	spawn(color)
	local currentdisplay = "Loading..."
	for i = 1,100 do
		wait()
		script.Parent.LoadingBarBackground.LoadingBar.Size += UDim2.new(0.01,0,0,0)
		if LOADER_TABLE[tostring(i)] then
			display.Text = LOADER_TABLE[tostring(i)].Text .. " "..i.."%"
			currentdisplay = LOADER_TABLE[tostring(i)].Text
			local result = LOADER_TABLE[tostring(i)].Init_Function()
			repeat wait() until result ~= nil
			currentdisplay = result[2]
			if result[1] then
				wait()
			end
		else
			display.Text = currentdisplay .. " "..i.."%"
		end
	end
	wait(1)
	venyx:Notify("Script Loaded","Script successfully loaded. Enjoy the script, toggle key 'Q'. Would you like to view the most recent updates?",function(valueSelectedUponNotify)
	if valueSelectedUponNotify then
	UpdateNotes.Visible = true
	else
	UpdateNotesScreenGui:Destroy()
	end
	end)
	script.Parent.Parent:Destroy()

end
coroutine.wrap(VMQU_fake_script)()
